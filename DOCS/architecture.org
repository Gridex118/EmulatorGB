#+Author: Alex Rosegrid
#+Title: Game Boy/Color Architecture
#+Startup: show2levels indent
#+OPTIONS: toc:2

* References
+ [[Copetti][https://www.copetti.org/writings/consoles/game-boy/]]


* CPU
The Game Boy used a custom CPU, the DMG-CPU (CPU-CGB, for the Color) by Sharp.
+ Used the Sharp SM83 as it's main processing unit.
+ Clocked at ~4.19MHz, originally; and upgraded to ~8.38MHz in the Game Boy Color.
+ Memory mapped I/O
+ 7 general purpose registers
+ For compatibility reasons, CPU-CGB had two modes:
  - Normal mode, at 4.19MHz
  - Dual speed mode, at 8.38 MHz
+ 8 bit data bus
+ 16 bit address bus: can address upto 64 KB of memory. The memory map was split at:
  - Cartridge's ROM
  - Work RAM    :: 8KiB(32KiB for the Color) WRAM, general purpose
  - High RAM    :: additional 127B HRAM, accessed via the =LDH= instruction
  - Display RAM :: 8KiB of VRAM, for graphics
  - I/O mapping
  - Interrupt controls


* Graphics
+ Calculations done by the CPU, and then rendered by the Picture Processing Unit(PPU).
+ 160x144 px screen resolution.
+ 4 shades of gray (white, light grey, dark grey and black); with a greenish tint.
+ The PPU is connected to 8KiB of VRAM. Some of the rendering data is stored directly in the PPU.

** Tiles
+ 8x8 bitmaps stored in the /Tile Set(Tile Pattern Table)/ of the VRAM.
+ Each pixel corresponds to one of four shades of grey.
+ Two /Tile Map/ provides the information about rendering location.

** Layering
Both layers can be used concurrently.
*** Background
+ 256x256 px (32x32 tiles) map.
+ The game gets to decide which part is selected for display.
+ The selected area can be changed during gameplay.
*** Window
+ 160x144 px map.
+ Contains HUD related tile data, like player stats.
